---
import BaseHead from "@/components/astro/BaseHead.astro";
import Header from "@/components/astro/Header.astro";
import Footer from "@/components/astro/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@/consts";
---

<head>
  <script is:inline>
    (function () {
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");
      document.documentElement.style.setProperty(
        "color-scheme",
        isDark ? "dark" : "light"
      );

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    })();
  </script>
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
</head>

<html lang="zh-CN">
  <body>
    <Header />
    <main class="container">
      <slot />
    </main>
    <Footer />
    <script is:inline>
      // prevent flash when using view transitions in astro
      const initColorMode = () => {
        const getThemePreference = () => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        };
        const isDark = getThemePreference() === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");
        document.documentElement.style.setProperty(
          "color-scheme",
          isDark ? "dark" : "light"
        );

        if (typeof localStorage !== "undefined") {
          const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
          });
          observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
          });
        }
      };

      // Runs on initial navigation
      initColorMode();
      // Runs on view transitions navigation
      document.addEventListener("astro:after-swap", initColorMode);
    </script>
  </body>
</html>
